name: Deploy Hugo Site

on:
  workflow_dispatch:
  push:
    branches:
      - posts  # Trigger workflow when files are pushed to the 'posts' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all branches are available

      # Step 2: Update Content on Master Branch
      - name: Update Content on Master Branch
        run: |
          # Configure Git for commits
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Step 2.1: Fetch and check out the 'master' branch
          git fetch origin posts
          git checkout posts
          git fetch origin master
          git checkout master

          
          # here we on master

          # new way to copy files
          git branch -r
          
          git checkout posts "*"

          

          # Step 2.2: Fetch and check out the 'posts' branch
          # git fetch origin posts
          # git checkout posts

          # # Step 2.3: Copy Markdown files from 'posts' to 'master'
          # cp *.md ../Second-Brain/content/Posts/

          # Step 2.4: Return to 'master' branch
          git checkout master

          # Step 2.5: Stage and commit the new/updated content
          git add content/Posts/
          git commit -m "Updated content from 'posts' branch"
          git push origin master

      # Step 3: Setup Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.139.4"
          extended: true
    # Specify your Hugo version

      # Step 4: Build the Site
      - name: Build Hugo Site
        run: |
          git checkout master
          hugo
          git add .
          git commit -m "new build"

      # Step 5: Deploy to 'For-Hosting' Branch
      - name: Deploy to For-Hosting
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout For-Hosting  # Switch to 'For-Hosting' branch

          git add .
          git commit -m "backup the old version"
          
          git subtree push --prefix public origin For-Hosting --force
